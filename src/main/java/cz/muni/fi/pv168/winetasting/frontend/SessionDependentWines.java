/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.muni.fi.pv168.winetasting.frontend;

import cz.muni.fi.pv168.winetasting.backend.WineSample;
import cz.muni.fi.pv168.winetasting.backend.WineSampleDAO;
import cz.muni.fi.pv168.winetasting.backend.WineTastingManager;
import cz.muni.fi.pv168.winetasting.backend.WineTastingSession;
import java.util.List;
import java.util.concurrent.ExecutionException;
import javax.swing.SwingWorker;

/**
 *
 * @author lukas
 */
public class SessionDependentWines extends javax.swing.JFrame {
    private static WineSampleDAO wineSampleDAO = CommonResources.getWineSampleDAO();
    private static WineTastingManager wineTastingManager = CommonResources.getWineTastingManager();
    private MainWindow context;
    private WineSampleTableModel wineSampleModel;
    private WineTastingSession wineSession;
    private int rowIndex;
    private FindWineSamplesBySession findWineSamplesBySession;
    
    private class FindWineSamplesBySession extends SwingWorker<List<WineSample>, Integer> {

        private WineTastingSession session;

        public FindWineSamplesBySession(WineTastingSession session) {
            this.session = session;
        }
        
        @Override
        protected List<WineSample> doInBackground() throws Exception {
            return wineTastingManager.findAllWinesInSession(session);
        }

        @Override
        protected void done() {
            try {
                //TODO log
                wineSampleModel.setWineSamples(get());
            } catch (ExecutionException ex) {
                //TODO log
            } catch (InterruptedException ex) {
                //TODO log
                throw new RuntimeException("Operation interrupted in FindWineSamplesBySession");
            }
        }   
}
    
    /**
     * Creates new form SessionDependentWines
     */
    public SessionDependentWines(MainWindow context, WineTastingSession wineTastingSession, int rowIndex) {
        initComponents();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        wineSession = wineTastingSession;
        wineSampleModel = (WineSampleTableModel) jTableWineSamples.getModel();  
        
        findWineSamplesBySession = new FindWineSamplesBySession(wineSession);
        findWineSamplesBySession.execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableWineSamples = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTableWineSamples.setModel(new WineSampleTableModel());
        jScrollPane2.setViewportView(jTableWineSamples);

        jButton1.setText("Remove selected");

        jButton2.setText("Rate selected wine");
        jButton2.setEnabled(false);

        jButton3.setText("Add Wines");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addGap(38, 38, 38)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTable jTableWineSamples;
    // End of variables declaration//GEN-END:variables
}
